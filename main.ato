#pragma experiment("FOR_LOOP")

import ElectricPower
import Resistor
import Electrical, Capacitor

from "parts/Espressif_Systems_ESP32_WROOM_32_N4/Espressif_Systems_ESP32_WROOM_32_N4.ato" import Espressif_Systems_ESP32_WROOM_32_N4_package
from "parts/Texas_Instruments_SN74AHCT125PWR/Texas_Instruments_SN74AHCT125PWR.ato" import Texas_Instruments_SN74AHCT125PWR_package
from "parts/XINGLIGHT_XL_5050RGBC_WS2812B/XINGLIGHT_XL_5050RGBC_WS2812B.ato" import XINGLIGHT_XL_5050RGBC_WS2812B_package
from "parts/SHOU_HAN_TYPE_C_6P/SHOU_HAN_TYPE_C_6P.ato" import SHOU_HAN_TYPE_C_6P_package
from "parts/XFCN_PTF_15/XFCN_PTF_15.ato" import XFCN_PTF_15_package
from "LEDColumn.ato" import LEDColumn

module WLED_Controller:
    # --- Power Input and Distribution ---
    power_5v = new ElectricPower # 5V and GND from USB-C, distributed to LEDs and level shifter

    # USB-C Connector (provides 5V and GND)
    usb_c_connector = new SHOU_HAN_TYPE_C_6P_package

    # Connect USB-C 5V and GND to power_5v interface
    usb_c_connector.VBUS ~ power_5v.vcc
    usb_c_connector.GND ~ power_5v.gnd

    # Fuse on 5V line for protection
    fuse_5a = new XFCN_PTF_15_package
    fuse_5a.1 ~ power_5v.vcc

    # --- ESP32 Controller Section ---
    esp32Controller = new Espressif_Systems_ESP32_WROOM_32_N4_package

    # ESP32 GND is tied to system GND
    power_5v.gnd ~ esp32Controller.GND

    # Decoupling capacitor for ESP32 3.3V rail (recommended)
    rail_3v3_capacitor = new Capacitor
    rail_3v3_capacitor.capacitance = 470uF +/- 10%
    esp32Controller.GND ~ rail_3v3_capacitor.unnamed[0]
    esp32Controller.P3V3 ~ rail_3v3_capacitor.unnamed[1]

    # --- Level Shifter Section ---
    levelShifter = new Texas_Instruments_SN74AHCT125PWR_package

    # Level shifter powered from fused 5V
    # (already connected above: fuse_5a.2 ~ levelShifter.VCC)
    levelShifter.GND ~ power_5v.gnd

    # Decoupling capacitor for level shifter
    levelShifter_capacitor = new Capacitor
    levelShifter_capacitor.capacitance = 100nF +/- 10%
    levelShifter_capacitor.package = "C0402"
    levelShifter.GND ~ levelShifter_capacitor.unnamed[0]
    levelShifter.VCC ~ levelShifter_capacitor.unnamed[1]

    # Fuse output powers level shifter and (optionally) other 5V peripherals
    fuse_5a.2 ~ levelShifter.VCC

    # --- LED Array Section ---
    led_columns = new LEDColumn[10]

    # Distribute 5V power to all LED columns
    for led_column in led_columns:
        power_5v ~ led_column.power_5v

    # ESP32 to level shifter connections
    esp32Controller.GND ~ levelShifter.n1OE
    esp32Controller.IO4 ~ levelShifter.P1A
    levelShifter_P1Y_Resistor = new Resistor
    levelShifter_P1Y_Resistor.resistance = 100ohm +/- 10%
    levelShifter_P1Y_Resistor.package = "R0402"
    levelShifter.P1Y ~ levelShifter_P1Y_Resistor.unnamed[0]
    levelShifter_P1Y_Resistor.unnamed[0] ~ led_columns[0].data_in

    # Tie unused level shifter inputs/outputs to GND
    esp32Controller.GND ~ levelShifter.n2OE
    esp32Controller.GND ~ levelShifter.P2A
    esp32Controller.GND ~ levelShifter.n3OE
    esp32Controller.GND ~ levelShifter.P3A
    esp32Controller.GND ~ levelShifter.P4A
    esp32Controller.GND ~ levelShifter.n4OE

    # Chain data between LED columns
    led_columns[0].data_out ~ led_columns[1].data_in
    led_columns[1].data_out ~ led_columns[2].data_in
    led_columns[2].data_out ~ led_columns[3].data_in
    led_columns[3].data_out ~ led_columns[4].data_in
    led_columns[4].data_out ~ led_columns[5].data_in
    led_columns[5].data_out ~ led_columns[6].data_in 
    led_columns[6].data_out ~ led_columns[7].data_in
    led_columns[7].data_out ~ led_columns[8].data_in
    led_columns[8].data_out ~ led_columns[9].data_in

    # Optional: Decoupling capacitor for 5V rail (for LED stability)
    rail_5v_capacitor = new Capacitor
    rail_5v_capacitor.capacitance = 470uF +/- 10%
    power_5v.gnd ~ rail_5v_capacitor.unnamed[0]
    power_5v.vcc ~ rail_5v_capacitor.unnamed[1]
